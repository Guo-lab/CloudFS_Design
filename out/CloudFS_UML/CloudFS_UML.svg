<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1384px" preserveAspectRatio="none" style="width:3452px;height:1384px;background:#FFFFFF;" version="1.1" viewBox="0 0 3452 1384" width="3452px" zoomAndPan="magnify"><defs/><g><!--cluster Cloud File System--><g id="cluster_Cloud File System"><path d="M8.5,6 L139.5,6 A3.75,3.75 0 0 1 142,8.5 L149,28.4883 L3442.5,28.4883 A2.5,2.5 0 0 1 3445,30.9883 L3445,1374.95 A2.5,2.5 0 0 1 3442.5,1377.45 L8.5,1377.45 A2.5,2.5 0 0 1 6,1374.95 L6,8.5 A2.5,2.5 0 0 1 8.5,6 " fill="none" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="6" x2="149" y1="28.4883" y2="28.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="130" x="10" y="21.5352">Cloud File System</text></g><!--class CloudFileSystemHandler--><g id="elem_CloudFileSystemHandler"><rect codeLine="4" fill="#F1F1F1" height="386.3867" id="CloudFileSystemHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="798" x="22" y="264.41"/><ellipse cx="333.25" cy="284.7205" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M335.7231,290.8636 Q335.1421,291.1624 334.5029,291.3119 Q333.8638,291.4613 333.1582,291.4613 Q330.6514,291.4613 329.3315,289.8094 Q328.0117,288.1576 328.0117,285.0365 Q328.0117,281.9071 329.3315,280.2552 Q330.6514,278.6034 333.1582,278.6034 Q333.8638,278.6034 334.5112,278.7528 Q335.1587,278.9022 335.7231,279.201 L335.7231,281.9237 Q335.0923,281.3426 334.4988,281.0728 Q333.9053,280.8031 333.2744,280.8031 Q331.9297,280.8031 331.2449,281.8697 Q330.5601,282.9364 330.5601,285.0365 Q330.5601,287.1283 331.2449,288.1949 Q331.9297,289.2616 333.2744,289.2616 Q333.9053,289.2616 334.4988,288.9918 Q335.0923,288.722 335.7231,288.141 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="59" x="407.75" y="281.0116">&#171;abstract&#187;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="353.75" y="297.078">CloudFileSystemHandler</text><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="819" y1="305.0311" y2="305.0311"/><line style="stroke:#181818;stroke-width:0.5;" x1="23" x2="819" y1="313.0311" y2="313.0311"/><ellipse cx="33" cy="326.7752" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="42" y="330.5663">virtual ~CloudFileSystemHandler() = default</text><ellipse cx="33" cy="343.2635" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="361" x="42" y="347.0545">virtual void *cloudfsInit(struct fuse_conn_info *conn)</text><ellipse cx="33" cy="359.7518" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="469" x="42" y="363.5428">virtual int cloudfsOpen(const char *path, struct fuse_file_info *fi) = 0</text><ellipse cx="33" cy="376.2401" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="42" y="380.0311">virtual int cloudfsRead(const char *path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi) = 0</text><ellipse cx="33" cy="392.7284" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="740" x="42" y="396.5194">virtual int cloudfsWrite(const char *path, const char *buf, size_t size, off_t offset, struct fuse_file_info *fi) = 0</text><ellipse cx="33" cy="409.2166" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="484" x="42" y="413.0077">virtual int cloudfsRelease(const char *path, struct fuse_file_info *fi) = 0</text><ellipse cx="33" cy="425.7049" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="429" x="42" y="429.4959">virtual int cloudfsTruncate(const char *path, off_t newsize) = 0</text><ellipse cx="33" cy="442.1932" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="314" x="42" y="445.9842">virtual int cloudfsUnlink(const char *path) = 0</text><ellipse cx="33" cy="458.6815" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="424" x="42" y="462.4725">virtual int cloudfsGetattr(const char *path, struct stat *statbuf)</text><ellipse cx="33" cy="475.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="589" x="42" y="478.9608">virtual int cloudfsGetxattr(const char *path, const char *name, char *value, size_t size)</text><ellipse cx="33" cy="491.658" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="691" x="42" y="495.4491">virtual int cloudfsSetxattr(const char *path, const char *name, const char *value, size_t size, int flags)</text><ellipse cx="33" cy="508.1463" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="463" x="42" y="511.9373">virtual int cloudfsMknod(const char *path, mode_t mode, dev_t dev)</text><ellipse cx="33" cy="524.6346" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354" x="42" y="528.4256">virtual int cloudfsAccess(const char *path, int mask)</text><ellipse cx="33" cy="541.1229" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="486" x="42" y="544.9139">virtual int cloudfsUtimens(const char *path, const struct timespec tv[2])</text><ellipse cx="33" cy="557.6112" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="42" y="561.4022">virtual int cloudfsChmod(const char *path, mode_t mode)</text><ellipse cx="33" cy="574.0995" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="42" y="577.8905">virtual int cloudfsMkdir(const char *path, mode_t mode)</text><ellipse cx="33" cy="590.5877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="460" x="42" y="594.3788">virtual int cloudfsOpendir(const char *path, struct fuse_file_info *fi)</text><ellipse cx="33" cy="607.076" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="744" x="42" y="610.867">virtual int cloudfsReaddir(const char *path, void *buf, fuse_fill_dir_t filler, off_t offset, struct fuse_file_info *fi)</text><ellipse cx="33" cy="623.5643" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="283" x="42" y="627.3553">virtual int cloudfsRmdir(const char *path)</text><ellipse cx="33" cy="640.0526" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="772" x="42" y="643.8436">virtual int cloudfsIoctl(const char *path, int cmd, void *arg, struct fuse_file_info *fi, unsigned int flags, void *data)</text></g><!--class DedupCloudFileSystemHandler--><g id="elem_DedupCloudFileSystemHandler"><rect codeLine="27" fill="#F1F1F1" height="163.418" id="DedupCloudFileSystemHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="677" x="22.5" y="768.51"/><ellipse cx="250.75" cy="784.51" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M253.2231,790.6531 Q252.6421,790.9519 252.0029,791.1013 Q251.3638,791.2507 250.6582,791.2507 Q248.1514,791.2507 246.8315,789.5989 Q245.5117,787.947 245.5117,784.8259 Q245.5117,781.6965 246.8315,780.0447 Q248.1514,778.3928 250.6582,778.3928 Q251.3638,778.3928 252.0112,778.5422 Q252.6587,778.6916 253.2231,778.9905 L253.2231,781.7131 Q252.5923,781.1321 251.9988,780.8623 Q251.4053,780.5925 250.7744,780.5925 Q249.4297,780.5925 248.7449,781.6592 Q248.0601,782.7258 248.0601,784.8259 Q248.0601,786.9177 248.7449,787.9844 Q249.4297,789.051 250.7744,789.051 Q251.4053,789.051 251.9988,788.7812 Q252.5923,788.5115 253.2231,787.9304 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="271.25" y="789.801">DedupCloudFileSystemHandler</text><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="698.5" y1="800.51" y2="800.51"/><line style="stroke:#181818;stroke-width:0.5;" x1="23.5" x2="698.5" y1="808.51" y2="808.51"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="28.5" y="826.0452">void cloudfsDestroy(void *data)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="28.5" y="842.5334">int cloudfsOpen(const char *path, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="623" x="28.5" y="859.0217">int cloudfsRead(const char *path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="665" x="28.5" y="875.51">int cloudfsWrite(const char *path, const char *buf, size_t size, off_t offset, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="409" x="28.5" y="891.9983">int cloudfsRelease(const char *path, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="300" x="28.5" y="908.4866">int cloudfsUnlink(const char *path) override</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354" x="28.5" y="924.9748">int cloudfsTruncate(const char *path, off_t newsize)</text></g><!--class NoDedupCloudFileSystemHandler--><g id="elem_NoDedupCloudFileSystemHandler"><rect codeLine="37" fill="#F1F1F1" height="163.418" id="NoDedupCloudFileSystemHandler" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="677" x="734.5" y="768.51"/><ellipse cx="953.25" cy="784.51" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M955.7231,790.6531 Q955.1421,790.9519 954.5029,791.1013 Q953.8638,791.2507 953.1582,791.2507 Q950.6514,791.2507 949.3315,789.5989 Q948.0117,787.947 948.0117,784.8259 Q948.0117,781.6965 949.3315,780.0447 Q950.6514,778.3928 953.1582,778.3928 Q953.8638,778.3928 954.5112,778.5422 Q955.1587,778.6916 955.7231,778.9905 L955.7231,781.7131 Q955.0923,781.1321 954.4988,780.8623 Q953.9053,780.5925 953.2744,780.5925 Q951.9297,780.5925 951.2449,781.6592 Q950.5601,782.7258 950.5601,784.8259 Q950.5601,786.9177 951.2449,787.9844 Q951.9297,789.051 953.2744,789.051 Q953.9053,789.051 954.4988,788.7812 Q955.0923,788.5115 955.7231,787.9304 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="231" x="973.75" y="789.801">NoDedupCloudFileSystemHandler</text><line style="stroke:#181818;stroke-width:0.5;" x1="735.5" x2="1410.5" y1="800.51" y2="800.51"/><line style="stroke:#181818;stroke-width:0.5;" x1="735.5" x2="1410.5" y1="808.51" y2="808.51"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="740.5" y="826.0452">void cloudfsDestroy(void *data)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="740.5" y="842.5334">int cloudfsOpen(const char *path, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="623" x="740.5" y="859.0217">int cloudfsRead(const char *path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="665" x="740.5" y="875.51">int cloudfsWrite(const char *path, const char *buf, size_t size, off_t offset, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="409" x="740.5" y="891.9983">int cloudfsRelease(const char *path, struct fuse_file_info *fi)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="740.5" y="908.4866">int cloudfsUnlink(const char *path)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="354" x="740.5" y="924.9748">int cloudfsTruncate(const char *path, off_t newsize)</text></g><!--class CloudFileStorageDriver--><g id="elem_CloudFileStorageDriver"><rect codeLine="48" fill="#F1F1F1" height="163.418" id="CloudFileStorageDriver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="487" x="2002.5" y="41"/><ellipse cx="2162.25" cy="57" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2164.7231,63.1431 Q2164.1421,63.4419 2163.5029,63.5913 Q2162.8638,63.7407 2162.1582,63.7407 Q2159.6514,63.7407 2158.3315,62.0889 Q2157.0117,60.437 2157.0117,57.3159 Q2157.0117,54.1865 2158.3315,52.5347 Q2159.6514,50.8828 2162.1582,50.8828 Q2162.8638,50.8828 2163.5112,51.0322 Q2164.1587,51.1816 2164.7231,51.4805 L2164.7231,54.2031 Q2164.0923,53.6221 2163.4988,53.3523 Q2162.9053,53.0825 2162.2744,53.0825 Q2160.9297,53.0825 2160.2449,54.1492 Q2159.5601,55.2158 2159.5601,57.3159 Q2159.5601,59.4077 2160.2449,60.4744 Q2160.9297,61.541 2162.2744,61.541 Q2162.9053,61.541 2163.4988,61.2712 Q2164.0923,61.0015 2164.7231,60.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2182.75" y="62.291">CloudFileStorageDriver</text><line style="stroke:#181818;stroke-width:0.5;" x1="2003.5" x2="2488.5" y1="73" y2="73"/><ellipse cx="2013.5" cy="86.7441" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="2022.5" y="90.5352">cloudfs_state state_</text><ellipse cx="2013.5" cy="103.2324" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="2022.5" y="107.0234">std::unordered_map&lt;int, cloudfs_file_metadata&gt; multiple_sessions</text><ellipse cx="2013.5" cy="119.7207" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="278" x="2022.5" y="123.5117">DeduplicationManager* dedup_manager</text><ellipse cx="2013.5" cy="136.209" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="2022.5" y="140">SnapshotManager* snapshot_manager</text><ellipse cx="2013.5" cy="152.6973" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="2022.5" y="156.4883">CacheManager* cache_manager</text><line style="stroke:#181818;stroke-width:0.5;" x1="2003.5" x2="2488.5" y1="163.4414" y2="163.4414"/><ellipse cx="2013.5" cy="177.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="2022.5" y="180.9766">CloudFileStorageDriver()</text><ellipse cx="2013.5" cy="193.6738" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="2022.5" y="197.4648">~CloudFileStorageDriver()</text></g><!--class RabinChunker--><g id="elem_RabinChunker"><rect codeLine="58" fill="#F1F1F1" height="278.8359" id="RabinChunker" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="630" x="1447" y="710.8"/><ellipse cx="1708.75" cy="726.8" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1711.2231,732.9431 Q1710.6421,733.2419 1710.0029,733.3913 Q1709.3638,733.5407 1708.6582,733.5407 Q1706.1514,733.5407 1704.8315,731.8889 Q1703.5117,730.237 1703.5117,727.1159 Q1703.5117,723.9865 1704.8315,722.3347 Q1706.1514,720.6828 1708.6582,720.6828 Q1709.3638,720.6828 1710.0112,720.8322 Q1710.6587,720.9816 1711.2231,721.2805 L1711.2231,724.0031 Q1710.5923,723.4221 1709.9988,723.1523 Q1709.4053,722.8825 1708.7744,722.8825 Q1707.4297,722.8825 1706.7449,723.9492 Q1706.0601,725.0158 1706.0601,727.1159 Q1706.0601,729.2077 1706.7449,730.2744 Q1707.4297,731.341 1708.7744,731.341 Q1709.4053,731.341 1709.9988,731.0712 Q1710.5923,730.8015 1711.2231,730.2204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="1729.25" y="732.091">RabinChunker</text><line style="stroke:#181818;stroke-width:0.5;" x1="1448" x2="2076" y1="742.8" y2="742.8"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="753.5441"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="1467" y="760.3352">rabinpoly_t* rp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="770.0324"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="1467" y="776.8234">EVP_MD_CTX* mdctx;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="786.5207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="1467" y="793.3117">const EVP_MD* md;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="803.009"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="308" x="1467" y="809.8">unsigned char md_value[EVP_MAX_MD_SIZE];</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="819.4973"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="1467" y="826.2883">unsigned int md_len;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="835.9855"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="1467" y="842.7766">off_t rabin_current_offset;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="852.4738"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="1467" y="859.2648">size_t seg_len;</text><line style="stroke:#181818;stroke-width:0.5;" x1="1448" x2="2076" y1="866.218" y2="866.218"/><ellipse cx="1458" cy="879.9621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="285" x="1467" y="883.7531">RabinChunker(struct cloudfs_state* state)</text><ellipse cx="1458" cy="896.4504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="1467" y="900.2414">~RabinChunker()</text><ellipse cx="1458" cy="912.9387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="503" x="1467" y="916.7297">std::vector&lt;chunks_local_metadata&gt; runRabinSegment(int fd, size_t size)</text><ellipse cx="1458" cy="929.427" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="604" x="1467" y="933.218">std::vector&lt;chunks_local_metadata&gt; runRawRabinSegment(char* buftoread, size_t size)</text><ellipse cx="1458" cy="945.9152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="1467" y="949.7063">void resetRabinOffset(off_t rabin_curr)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="959.4035"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="1467" y="966.1945">chunks_local_metadata getLastChunk()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1455" y="975.8918"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="496" x="1467" y="982.6828">std::string convertBinaryToHex(const unsigned char* data, size_t length)</text></g><!--class DeduplicationManager--><g id="elem_DeduplicationManager"><rect codeLine="75" fill="#F1F1F1" height="377.7656" id="DeduplicationManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="779" x="854.5" y="268.73"/><ellipse cx="1162.25" cy="284.73" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1164.7231,290.8731 Q1164.1421,291.1719 1163.5029,291.3213 Q1162.8638,291.4707 1162.1582,291.4707 Q1159.6514,291.4707 1158.3315,289.8189 Q1157.0117,288.167 1157.0117,285.0459 Q1157.0117,281.9165 1158.3315,280.2647 Q1159.6514,278.6128 1162.1582,278.6128 Q1162.8638,278.6128 1163.5112,278.7622 Q1164.1587,278.9116 1164.7231,279.2105 L1164.7231,281.9331 Q1164.0923,281.3521 1163.4988,281.0823 Q1162.9053,280.8125 1162.2744,280.8125 Q1160.9297,280.8125 1160.2449,281.8792 Q1159.5601,282.9458 1159.5601,285.0459 Q1159.5601,287.1377 1160.2449,288.2044 Q1160.9297,289.271 1162.2744,289.271 Q1162.9053,289.271 1163.4988,289.0012 Q1164.0923,288.7315 1164.7231,288.1504 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1182.75" y="290.021">DeduplicationManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="855.5" x2="1632.5" y1="300.73" y2="300.73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="862.5" y="311.4741"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="874.5" y="318.2652">const char* GLOBAL_CHUNKS_FILE_NAME";</text><ellipse cx="865.5" cy="330.9624" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="576" x="874.5" y="334.7534">std::unordered_map&lt;std::string, chunks_global_metadata&gt; global_chunk_container</text><ellipse cx="865.5" cy="347.4507" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="676" x="874.5" y="351.2417">std::unordered_map&lt;std::string, std::vector&lt;chunks_local_metadata&gt;&gt; chunks_of_each_cloud_file</text><line style="stroke:#181818;stroke-width:0.5;" x1="855.5" x2="1632.5" y1="358.1948" y2="358.1948"/><ellipse cx="865.5" cy="371.939" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="342" x="874.5" y="375.73">DeduplicationManager(struct cloudfs_state* state)</text><ellipse cx="865.5" cy="388.4273" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="174" x="874.5" y="392.2183">~DeduplicationManager()</text><ellipse cx="865.5" cy="404.9155" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="874.5" y="408.7066">bool saveGlobalChunksInfo()</text><ellipse cx="865.5" cy="421.4038" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="874.5" y="425.1948">bool saveLocalChunksInfo(const std::string&amp; file_path)</text><ellipse cx="865.5" cy="437.8921" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="874.5" y="441.6831">bool loadGlobalChunksInfo()</text><ellipse cx="865.5" cy="454.3804" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="372" x="874.5" y="458.1714">bool loadLocalChunksInfo(const std::string&amp; file_path)</text><ellipse cx="865.5" cy="470.8687" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="519" x="874.5" y="474.6597">int getChunkPositionIdx(const std::string&amp; file_path, off_t offset, size_t size)</text><ellipse cx="865.5" cy="487.357" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="440" x="874.5" y="491.148">off_t getChunkPosition(const std::string&amp; file_path, int start_idx)</text><ellipse cx="865.5" cy="503.8452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="533" x="874.5" y="507.6363">std::vector&lt;chunks_local_metadata&gt;&amp; getChunks(const std::string&amp; file_path)</text><ellipse cx="865.5" cy="520.3335" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="328" x="874.5" y="524.1245">bool checkForDuplicate(const std::string&amp; hash)</text><ellipse cx="865.5" cy="536.8218" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="874.5" y="540.6128">void addChunkReference(const std::string&amp; hash)</text><ellipse cx="865.5" cy="553.3101" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="874.5" y="557.1011">void removeChunkReference(const std::string&amp; hash)</text><ellipse cx="865.5" cy="569.7984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="874.5" y="573.5894">void snapshotGlobalChunks()</text><ellipse cx="865.5" cy="586.2866" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="874.5" y="590.0777">std::vector&lt;std::string&gt; collectKeys(const char* prefix)</text><ellipse cx="865.5" cy="602.7749" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="642" x="874.5" y="606.5659">void deleteSnapshotInMemGlobalChunks(const std::vector&lt;std::string&gt;&amp; hash_to_decrement)</text><ellipse cx="865.5" cy="619.2632" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="753" x="874.5" y="623.0542">void deleteSnapshotSSDGlobalChunks(const char* prefix, const std::vector&lt;std::string&gt;&amp; hash_to_decrement)</text><ellipse cx="865.5" cy="635.7515" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="462" x="874.5" y="639.5425">chunks_global_metadata&amp; getGlobalChunk(const std::string&amp; hash)</text></g><!--class SnapshotManager--><g id="elem_SnapshotManager"><rect codeLine="99" fill="#F1F1F1" height="377.7656" id="SnapshotManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="565" x="1668.5" y="268.73"/><ellipse cx="1884.75" cy="284.73" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1887.2231,290.8731 Q1886.6421,291.1719 1886.0029,291.3213 Q1885.3638,291.4707 1884.6582,291.4707 Q1882.1514,291.4707 1880.8315,289.8189 Q1879.5117,288.167 1879.5117,285.0459 Q1879.5117,281.9165 1880.8315,280.2647 Q1882.1514,278.6128 1884.6582,278.6128 Q1885.3638,278.6128 1886.0112,278.7622 Q1886.6587,278.9116 1887.2231,279.2105 L1887.2231,281.9331 Q1886.5923,281.3521 1885.9988,281.0823 Q1885.4053,280.8125 1884.7744,280.8125 Q1883.4297,280.8125 1882.7449,281.8792 Q1882.0601,282.9458 1882.0601,285.0459 Q1882.0601,287.1377 1882.7449,288.2044 Q1883.4297,289.271 1884.7744,289.271 Q1885.4053,289.271 1885.9988,289.0012 Q1886.5923,288.7315 1887.2231,288.1504 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1905.25" y="290.021">SnapshotManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="1669.5" x2="2232.5" y1="300.73" y2="300.73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1676.5" y="311.4741"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="1688.5" y="318.2652">const char* SNAPSHOT_FILE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1676.5" y="327.9624"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1688.5" y="334.7534">const char* SNAPSHOT_INPUT_DIR</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1676.5" y="344.4507"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="236" x="1688.5" y="351.2417">const char* SNAPSHOT_META_FILE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1676.5" y="360.939"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="175" x="1688.5" y="367.73">unsigned long timestamp</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1676.5" y="377.4273"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="1688.5" y="384.2183">std::vector&lt;unsigned long&gt; timestamp_list</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1676.5" y="393.9155"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="360" x="1688.5" y="400.7066">std::vector&lt;unsigned long&gt; installed_timestamp_list</text><ellipse cx="1679.5" cy="413.4038" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="296" x="1688.5" y="417.1948">int updateSnapshotsChunkReferenceCount</text><line style="stroke:#181818;stroke-width:0.5;" x1="1669.5" x2="2232.5" y1="424.148" y2="424.148"/><ellipse cx="1679.5" cy="437.8921" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="134" x="1688.5" y="441.6831">SnapshotManager()</text><ellipse cx="1679.5" cy="454.3804" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="1688.5" y="458.1714">~SnapshotManager()</text><ellipse cx="1679.5" cy="470.8687" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1688.5" y="474.6597">bool saveSnapshotMetadata()</text><ellipse cx="1679.5" cy="487.357" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="1688.5" y="491.148">bool loadSnapshotMetadata()</text><ellipse cx="1679.5" cy="503.8452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1688.5" y="507.6363">void initSnapshot()</text><ellipse cx="1679.5" cy="520.3335" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="1688.5" y="524.1245">unsigned long createSnapshot(int fd)</text><ellipse cx="1679.5" cy="536.8218" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="247" x="1688.5" y="540.6128">unsigned long* listSnapshots(int fd)</text><ellipse cx="1679.5" cy="553.3101" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="1688.5" y="557.1011">int restoreSnapshot(int fd, unsigned long timestamp)</text><ellipse cx="1679.5" cy="569.7984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="1688.5" y="573.5894">int installSnapshot(unsigned long timestamp)</text><ellipse cx="1679.5" cy="586.2866" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="330" x="1688.5" y="590.0777">int uninstallSnapshot(unsigned long timestamp)</text><ellipse cx="1679.5" cy="602.7749" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="313" x="1688.5" y="606.5659">int deleteSnapshot(unsigned long timestamp)</text><ellipse cx="1679.5" cy="619.2632" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="1688.5" y="623.0542">int cleanDirectory(const char* path)</text><ellipse cx="1679.5" cy="635.7515" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="539" x="1688.5" y="639.5425">unsigned long timestamp, const std::vector&lt;std::string&gt;&amp; hash_to_decrement)</text></g><!--class CacheManager--><g id="elem_CacheManager"><rect codeLine="122" fill="#F1F1F1" height="377.7656" id="CacheManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="544" x="2269" y="268.73"/><ellipse cx="2485.75" cy="284.73" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2488.2231,290.8731 Q2487.6421,291.1719 2487.0029,291.3213 Q2486.3638,291.4707 2485.6582,291.4707 Q2483.1514,291.4707 2481.8315,289.8189 Q2480.5117,288.167 2480.5117,285.0459 Q2480.5117,281.9165 2481.8315,280.2647 Q2483.1514,278.6128 2485.6582,278.6128 Q2486.3638,278.6128 2487.0112,278.7622 Q2487.6587,278.9116 2488.2231,279.2105 L2488.2231,281.9331 Q2487.5923,281.3521 2486.9988,281.0823 Q2486.4053,280.8125 2485.7744,280.8125 Q2484.4297,280.8125 2483.7449,281.8792 Q2483.0601,282.9458 2483.0601,285.0459 Q2483.0601,287.1377 2483.7449,288.2044 Q2484.4297,289.271 2485.7744,289.271 Q2486.4053,289.271 2486.9988,289.0012 Q2487.5923,288.7315 2488.2231,288.1504 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="2506.25" y="290.021">CacheManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="2270" x2="2812" y1="300.73" y2="300.73"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="311.4741"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="160" x="2289" y="318.2652">const char* CACHE_DIR</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="327.9624"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="2289" y="334.7534">const char* CACHE_META_FILE</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="344.4507"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="2289" y="351.2417">size_t current_cache_size</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="360.939"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="2289" y="367.73">size_t cache_capacity</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="377.4273"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="305" x="2289" y="384.2183">std::list&lt;ChunkNode&gt; lru_doubly_linked_list</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="393.9155"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="518" x="2289" y="400.7066">std::unordered_map&lt;std::string, std::list&lt;ChunkNode&gt;::iterator&gt; lru_cache</text><ellipse cx="2280" cy="413.4038" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="2289" y="417.1948">std::string CACHE_FULL_PATH</text><ellipse cx="2280" cy="429.8921" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="2289" y="433.6831">bool cacheable</text><line style="stroke:#181818;stroke-width:0.5;" x1="2270" x2="2812" y1="440.6363" y2="440.6363"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="451.3804"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="2289" y="458.1714">void moveNodeToFront(const std::string&amp; key)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2277" y="467.8687"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="2289" y="474.6597">void evictCacheNodeIfNecessary()</text><ellipse cx="2280" cy="487.357" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="2289" y="491.148">CacheManager(size_t capacity, const char* SSD_PATH)</text><ellipse cx="2280" cy="503.8452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="2289" y="507.6363">~CacheManager()</text><ellipse cx="2280" cy="520.3335" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="2289" y="524.1245">void saveCache()</text><ellipse cx="2280" cy="536.8218" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="115" x="2289" y="540.6128">void loadCache()</text><ellipse cx="2280" cy="553.3101" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="509" x="2289" y="557.1011">void putCacheNode(const std::string&amp; key, chunks_global_metadata value)</text><ellipse cx="2280" cy="569.7984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="299" x="2289" y="573.5894">void evictCacheNode(const std::string&amp; key)</text><ellipse cx="2280" cy="586.2866" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="2289" y="590.0777">ChunkNode* accessCacheNode(const std::string&amp; key)</text><ellipse cx="2280" cy="602.7749" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="2289" y="606.5659">void addChunkNodeReferenceCount(const std::string&amp; key)</text><ellipse cx="2280" cy="619.2632" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="432" x="2289" y="623.0542">void removeChunkNodeReferenceCount(const std::string&amp; key)</text><ellipse cx="2280" cy="635.7515" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="2289" y="639.5425">void printCache()</text></g><!--class cloudfs_state--><g id="elem_cloudfs_state"><rect codeLine="145" fill="#F1F1F1" height="212.8828" id="cloudfs_state" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="272" x="2848" y="351.17"/><ellipse cx="2934.75" cy="367.17" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2934.4834,368.233 Q2932.6323,367.5274 2931.9766,366.7513 Q2931.3208,365.9752 2931.3208,364.6637 Q2931.3208,362.9786 2932.3999,362.0157 Q2933.479,361.0528 2935.3633,361.0528 Q2936.2183,361.0528 2937.0732,361.2479 Q2937.9282,361.4429 2938.7666,361.8248 L2938.7666,364.2154 Q2937.978,363.6593 2937.1646,363.3687 Q2936.3511,363.0782 2935.5542,363.0782 Q2934.666,363.0782 2934.1929,363.4351 Q2933.7197,363.7921 2933.7197,364.4561 Q2933.7197,364.9708 2934.0642,365.307 Q2934.4087,365.6431 2935.5044,366.0499 L2936.5586,366.4483 Q2938.0527,366.9962 2938.7583,367.901 Q2939.4639,368.8057 2939.4639,370.1837 Q2939.4639,372.0596 2938.3557,372.9852 Q2937.2476,373.9107 2935.0063,373.9107 Q2934.085,373.9107 2933.1594,373.6908 Q2932.2339,373.4708 2931.3706,373.0391 L2931.3706,370.5074 Q2932.3501,371.2047 2933.2673,371.545 Q2934.1846,371.8853 2935.0811,371.8853 Q2935.9858,371.8853 2936.4839,371.4744 Q2936.9819,371.0636 2936.9819,370.3248 Q2936.9819,369.7686 2936.6499,369.3494 Q2936.3179,368.9303 2935.687,368.6895 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="2955.25" y="372.461">cloudfs_state</text><line style="stroke:#181818;stroke-width:0.5;" x1="2849" x2="3119" y1="383.17" y2="383.17"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="2854" y="400.7052">char ssd_path[MAX_PATH_LEN]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="2854" y="417.1934">char hostname[MAX_HOSTNAME_LEN]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="2854" y="433.6817">int ssd_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="2854" y="450.17">int cache_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="2854" y="466.6583">int threshold</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="2854" y="483.1466">int avg_seg_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="2854" y="499.6348">int min_seg_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="2854" y="516.1231">int max_seg_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="2854" y="532.6114">int rabin_window_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="2854" y="549.0997">char no_dedup</text><line style="stroke:#181818;stroke-width:0.5;" x1="2849" x2="3119" y1="556.0528" y2="556.0528"/></g><!--class cloudfs_file_metadata--><g id="elem_cloudfs_file_metadata"><rect codeLine="158" fill="#F1F1F1" height="97.4648" id="cloudfs_file_metadata" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="275" x="3154.5" y="408.88"/><ellipse cx="3213.25" cy="424.88" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M3212.9834,425.943 Q3211.1323,425.2374 3210.4766,424.4613 Q3209.8208,423.6852 3209.8208,422.3737 Q3209.8208,420.6886 3210.8999,419.7257 Q3211.979,418.7628 3213.8633,418.7628 Q3214.7183,418.7628 3215.5732,418.9579 Q3216.4282,419.1529 3217.2666,419.5348 L3217.2666,421.9254 Q3216.478,421.3693 3215.6646,421.0787 Q3214.8511,420.7882 3214.0542,420.7882 Q3213.166,420.7882 3212.6929,421.1451 Q3212.2197,421.5021 3212.2197,422.1661 Q3212.2197,422.6808 3212.5642,423.017 Q3212.9087,423.3531 3214.0044,423.7599 L3215.0586,424.1583 Q3216.5527,424.7062 3217.2583,425.611 Q3217.9639,426.5157 3217.9639,427.8937 Q3217.9639,429.7696 3216.8557,430.6952 Q3215.7476,431.6207 3213.5063,431.6207 Q3212.585,431.6207 3211.6594,431.4008 Q3210.7339,431.1808 3209.8706,430.7491 L3209.8706,428.2174 Q3210.8501,428.9147 3211.7673,429.255 Q3212.6846,429.5953 3213.5811,429.5953 Q3214.4858,429.5953 3214.9839,429.1844 Q3215.4819,428.7736 3215.4819,428.0348 Q3215.4819,427.4786 3215.1499,427.0594 Q3214.8179,426.6403 3214.187,426.3995 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="3233.75" y="430.171">cloudfs_file_metadata</text><line style="stroke:#181818;stroke-width:0.5;" x1="3155.5" x2="3428.5" y1="440.88" y2="440.88"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="3160.5" y="458.4152">char file_name[MAX_META_FIELD_LEN]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="77" x="3160.5" y="474.9034">int file_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="3160.5" y="491.3917">bool is_dirty</text><line style="stroke:#181818;stroke-width:0.5;" x1="3155.5" x2="3428.5" y1="498.3448" y2="498.3448"/></g><!--class chunks_global_metadata--><g id="elem_chunks_global_metadata"><rect codeLine="164" fill="#F1F1F1" height="97.4648" id="chunks_global_metadata" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="202" x="2411" y="1156.81"/><ellipse cx="2426" cy="1172.81" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2425.7334,1173.873 Q2423.8823,1173.1674 2423.2266,1172.3913 Q2422.5708,1171.6152 2422.5708,1170.3037 Q2422.5708,1168.6186 2423.6499,1167.6557 Q2424.729,1166.6928 2426.6133,1166.6928 Q2427.4683,1166.6928 2428.3232,1166.8879 Q2429.1782,1167.0829 2430.0166,1167.4648 L2430.0166,1169.8554 Q2429.228,1169.2993 2428.4146,1169.0087 Q2427.6011,1168.7182 2426.8042,1168.7182 Q2425.916,1168.7182 2425.4429,1169.0751 Q2424.9697,1169.4321 2424.9697,1170.0961 Q2424.9697,1170.6108 2425.3142,1170.947 Q2425.6587,1171.2831 2426.7544,1171.6899 L2427.8086,1172.0883 Q2429.3027,1172.6362 2430.0083,1173.541 Q2430.7139,1174.4457 2430.7139,1175.8237 Q2430.7139,1177.6996 2429.6057,1178.6252 Q2428.4976,1179.5507 2426.2563,1179.5507 Q2425.335,1179.5507 2424.4094,1179.3308 Q2423.4839,1179.1108 2422.6206,1178.6791 L2422.6206,1176.1474 Q2423.6001,1176.8447 2424.5173,1177.185 Q2425.4346,1177.5253 2426.3311,1177.5253 Q2427.2358,1177.5253 2427.7339,1177.1144 Q2428.2319,1176.7036 2428.2319,1175.9648 Q2428.2319,1175.4086 2427.8999,1174.9894 Q2427.5679,1174.5703 2426.937,1174.3295 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="2440" y="1178.101">chunks_global_metadata</text><line style="stroke:#181818;stroke-width:0.5;" x1="2412" x2="2612" y1="1188.81" y2="1188.81"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="87" x="2417" y="1206.3452">int ref_count</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="2417" y="1222.8334">size_t chunk_size</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="2417" y="1239.3217">bool is_dirty</text><line style="stroke:#181818;stroke-width:0.5;" x1="2412" x2="2612" y1="1246.2748" y2="1246.2748"/></g><!--class chunks_local_metadata--><g id="elem_chunks_local_metadata"><rect codeLine="172" fill="#F1F1F1" height="196.3945" id="chunks_local_metadata" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="476" x="2149" y="752.02"/><ellipse cx="2303.25" cy="768.02" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2302.9834,769.083 Q2301.1323,768.3774 2300.4766,767.6013 Q2299.8208,766.8252 2299.8208,765.5137 Q2299.8208,763.8286 2300.8999,762.8657 Q2301.979,761.9028 2303.8633,761.9028 Q2304.7183,761.9028 2305.5732,762.0979 Q2306.4282,762.2929 2307.2666,762.6748 L2307.2666,765.0654 Q2306.478,764.5093 2305.6646,764.2187 Q2304.8511,763.9282 2304.0542,763.9282 Q2303.166,763.9282 2302.6929,764.2851 Q2302.2197,764.6421 2302.2197,765.3061 Q2302.2197,765.8208 2302.5642,766.157 Q2302.9087,766.4931 2304.0044,766.8999 L2305.0586,767.2983 Q2306.5527,767.8462 2307.2583,768.751 Q2307.9639,769.6557 2307.9639,771.0337 Q2307.9639,772.9096 2306.8557,773.8352 Q2305.7476,774.7607 2303.5063,774.7607 Q2302.585,774.7607 2301.6594,774.5408 Q2300.7339,774.3208 2299.8706,773.8891 L2299.8706,771.3574 Q2300.8501,772.0547 2301.7673,772.395 Q2302.6846,772.7353 2303.5811,772.7353 Q2304.4858,772.7353 2304.9839,772.3244 Q2305.4819,771.9136 2305.4819,771.1748 Q2305.4819,770.6186 2305.1499,770.1994 Q2304.8179,769.7803 2304.187,769.5395 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2323.75" y="773.311">chunks_local_metadata</text><line style="stroke:#181818;stroke-width:0.5;" x1="2150" x2="2624" y1="784.02" y2="784.02"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="2155" y="801.5552">std::string chunk_hash</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="2155" y="818.0434">off_t chunk_position</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="2155" y="834.5317">size_t chunk_size</text><line style="stroke:#181818;stroke-width:0.5;" x1="2150" x2="2624" y1="841.4848" y2="841.4848"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="2155" y="859.02">chunks_local_metadata()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="178" x="2155" y="875.5083">~chunks_local_metadata()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="348" x="2155" y="891.9966">chunks_local_metadata(chunks_local_metadata&amp;&amp;)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="433" x="2155" y="908.4848">chunks_local_metadata&amp; operator=(chunks_local_metadata&amp;&amp;)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="379" x="2155" y="924.9731">chunks_local_metadata(const chunks_local_metadata&amp;)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="464" x="2155" y="941.4614">chunks_local_metadata&amp; operator=(const chunks_local_metadata&amp;)</text></g><!--class ChunkNode--><g id="elem_ChunkNode"><rect codeLine="184" fill="#F1F1F1" height="97.4648" id="ChunkNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="502" x="2660" y="801.49"/><ellipse cx="2866.25" cy="817.49" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2865.9834,818.553 Q2864.1323,817.8474 2863.4766,817.0713 Q2862.8208,816.2952 2862.8208,814.9837 Q2862.8208,813.2986 2863.8999,812.3357 Q2864.979,811.3728 2866.8633,811.3728 Q2867.7183,811.3728 2868.5732,811.5679 Q2869.4282,811.7629 2870.2666,812.1448 L2870.2666,814.5354 Q2869.478,813.9793 2868.6646,813.6887 Q2867.8511,813.3982 2867.0542,813.3982 Q2866.166,813.3982 2865.6929,813.7551 Q2865.2197,814.1121 2865.2197,814.7761 Q2865.2197,815.2908 2865.5642,815.627 Q2865.9087,815.9631 2867.0044,816.3699 L2868.0586,816.7683 Q2869.5527,817.3162 2870.2583,818.221 Q2870.9639,819.1257 2870.9639,820.5037 Q2870.9639,822.3796 2869.8557,823.3052 Q2868.7476,824.2307 2866.5063,824.2307 Q2865.585,824.2307 2864.6594,824.0108 Q2863.7339,823.7908 2862.8706,823.3591 L2862.8706,820.8274 Q2863.8501,821.5247 2864.7673,821.865 Q2865.6846,822.2053 2866.5811,822.2053 Q2867.4858,822.2053 2867.9839,821.7944 Q2868.4819,821.3836 2868.4819,820.6448 Q2868.4819,820.0886 2868.1499,819.6694 Q2867.8179,819.2503 2867.187,819.0095 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="81" x="2886.75" y="822.781">ChunkNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="2661" x2="3161" y1="833.49" y2="833.49"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="2666" y="851.0252">std::string key</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="2666" y="867.5134">chunks_global_metadata metadata</text><line style="stroke:#181818;stroke-width:0.5;" x1="2661" x2="3161" y1="874.4666" y2="874.4666"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="490" x="2666" y="892.0017">ChunkNode(const std::string&amp; k, const chunks_global_metadata&amp; meta)</text></g><!--class ChunksManager--><g id="elem_ChunksManager"><rect codeLine="208" fill="#F1F1F1" height="311.8125" id="ChunksManager" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="355" x="183.5" y="1049.64"/><ellipse cx="300.75" cy="1065.64" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M303.2231,1071.7831 Q302.6421,1072.0819 302.0029,1072.2313 Q301.3638,1072.3807 300.6582,1072.3807 Q298.1514,1072.3807 296.8315,1070.7289 Q295.5117,1069.077 295.5117,1065.9559 Q295.5117,1062.8265 296.8315,1061.1747 Q298.1514,1059.5228 300.6582,1059.5228 Q301.3638,1059.5228 302.0112,1059.6722 Q302.6587,1059.8216 303.2231,1060.1205 L303.2231,1062.8431 Q302.5923,1062.2621 301.9988,1061.9923 Q301.4053,1061.7225 300.7744,1061.7225 Q299.4297,1061.7225 298.7449,1062.7892 Q298.0601,1063.8558 298.0601,1065.9559 Q298.0601,1068.0477 298.7449,1069.1144 Q299.4297,1070.181 300.7744,1070.181 Q301.4053,1070.181 301.9988,1069.9112 Q302.5923,1069.6415 303.2231,1069.0604 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="321.25" y="1070.931">ChunksManager</text><line style="stroke:#181818;stroke-width:0.5;" x1="184.5" x2="537.5" y1="1081.64" y2="1081.64"/><ellipse cx="194.5" cy="1095.3841" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="203.5" y="1099.1752">int chunk_start_idx</text><ellipse cx="194.5" cy="1111.8724" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="203.5" y="1115.6634">int chunk_end_idx</text><ellipse cx="194.5" cy="1128.3607" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="203.5" y="1132.1517">off_t chunk_range</text><ellipse cx="194.5" cy="1144.849" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="203.5" y="1148.64">off_t chunk_start_offset</text><ellipse cx="194.5" cy="1161.3373" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="156" x="203.5" y="1165.1283">off_t chunk_end_offset</text><line style="stroke:#181818;stroke-width:0.5;" x1="184.5" x2="537.5" y1="1172.0814" y2="1172.0814"/><ellipse cx="194.5" cy="1185.8255" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="203.5" y="1189.6166">ChunksManager()</text><ellipse cx="194.5" cy="1202.3138" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="203.5" y="1206.1048">~ChunksManager()</text><ellipse cx="194.5" cy="1218.8021" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="207" x="203.5" y="1222.5931">void setChunksRange() &#171;omit&#187;</text><ellipse cx="194.5" cy="1235.2904" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="329" x="203.5" y="1239.0814">off_t transferFromCloudBufferToChunk() &#171;omit&#187;</text><ellipse cx="194.5" cy="1251.7787" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="203.5" y="1255.5697">void downloadCloudFileChunks() &#171;omit&#187;</text><ellipse cx="194.5" cy="1268.267" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="293" x="203.5" y="1272.058">off_t transferChunkToCloudBuffer() &#171;omit&#187;</text><ellipse cx="194.5" cy="1284.7552" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="273" x="203.5" y="1288.5463">void uploadChunksOfCloudFile() &#171;omit&#187;</text><ellipse cx="194.5" cy="1301.2435" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="203.5" y="1305.0345">void convertFileToChunks() &#171;omit&#187;</text><ellipse cx="194.5" cy="1317.7318" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="203.5" y="1321.5228">void rechunkLocalCopy() &#171;omit&#187;</text><ellipse cx="194.5" cy="1334.2201" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="203.5" y="1338.0111">void pruneChunks() &#171;omit&#187;</text><ellipse cx="194.5" cy="1350.7084" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="203.5" y="1354.4994">void clearChunks() &#171;omit&#187;</text></g><!--reverse link CloudFileSystemHandler to DedupCloudFileSystemHandler--><g id="link_CloudFileSystemHandler_DedupCloudFileSystemHandler"><path codeLine="227" d="M388.7075,668.8414 C382.3475,710.2514 378.69,734.03 373.42,768.33 " fill="none" id="CloudFileSystemHandler-backto-DedupCloudFileSystemHandler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="391.44,651.05,382.777,667.9305,394.638,669.7522,391.44,651.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloudFileSystemHandler to NoDedupCloudFileSystemHandler--><g id="link_CloudFileSystemHandler_NoDedupCloudFileSystemHandler"><path codeLine="228" d="M757.6608,660.301 C826.6108,701.611 880.41,733.84 937.58,768.09 " fill="none" id="CloudFileSystemHandler-backto-NoDedupCloudFileSystemHandler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="742.22,651.05,754.5771,665.448,760.7445,655.1541,742.22,651.05" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DedupCloudFileSystemHandler to ChunksManager--><g id="link_DedupCloudFileSystemHandler_ChunksManager"><path codeLine="229" d="M361,944.28 C361,979.12 361,1009.06 361,1049.46 " fill="none" id="DedupCloudFileSystemHandler-backto-ChunksManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="361,932.28,357,938.28,361,944.28,365,938.28,361,932.28" style="stroke:#181818;stroke-width:1.0;"/></g><!--link CloudFileStorageDriver to CloudFileSystemHandler--><g id="link_CloudFileStorageDriver_CloudFileSystemHandler"><path codeLine="230" d="M1990.2249,139.0228 C1646.6649,161.1928 1050.16,206.3 837,264.41 C831.44,265.93 831.6046,265.8214 826.0146,267.4714 " fill="none" id="CloudFileStorageDriver-CloudFileSystemHandler" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2002.2,138.25,1995.9549,134.6447,1990.2249,139.0228,1996.47,142.6281,2002.2,138.25" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="820.26,269.17,830.0242,270.4585,825.0555,267.7545,827.7594,262.7858,820.26,269.17" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloudFileStorageDriver to DeduplicationManager--><g id="link_CloudFileStorageDriver_DeduplicationManager"><path codeLine="231" d="M1990.3287,171.8752 C1881.3887,195.3252 1764.09,224.83 1651,264.41 C1645.28,266.42 1639.54,268.47 1633.78,270.58 " fill="none" id="CloudFileStorageDriver-backto-DeduplicationManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2002.06,169.35,1995.3526,166.7022,1990.3287,171.8752,1997.0361,174.523,2002.06,169.35" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloudFileStorageDriver to SnapshotManager--><g id="link_CloudFileStorageDriver_SnapshotManager"><path codeLine="232" d="M2166.2527,213.7023 C2148.8627,233.3323 2137.49,246.15 2117.7,268.49 " fill="none" id="CloudFileStorageDriver-backto-SnapshotManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2174.21,204.72,2167.2373,206.5587,2166.2527,213.7023,2173.2254,211.8636,2174.21,204.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloudFileStorageDriver to CacheManager--><g id="link_CloudFileStorageDriver_CacheManager"><path codeLine="233" d="M2325.7473,213.7023 C2343.1373,233.3323 2354.51,246.15 2374.3,268.49 " fill="none" id="CloudFileStorageDriver-backto-CacheManager" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2317.79,204.72,2318.7746,211.8636,2325.7473,213.7023,2324.7627,206.5587,2317.79,204.72" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloudFileStorageDriver to cloudfs_state--><g id="link_CloudFileStorageDriver_cloudfs_state"><path codeLine="234" d="M2501.8093,147.8966 C2612.6193,166.7866 2729.47,199.73 2831,264.41 C2865.44,286.36 2895.52,318.77 2919.69,350.76 " fill="none" id="CloudFileStorageDriver-backto-cloudfs_state" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2489.98,145.88,2495.2225,150.8314,2501.8093,147.8966,2496.5669,142.9452,2489.98,145.88" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CloudFileStorageDriver to cloudfs_file_metadata--><g id="link_CloudFileStorageDriver_cloudfs_file_metadata"><path codeLine="235" d="M2501.8595,143.45 C2727.1595,164.19 3030.71,202.15 3138,264.41 C3196.43,298.33 3241.4,363.59 3267.26,408.59 " fill="none" id="CloudFileStorageDriver-backto-cloudfs_file_metadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2489.91,142.35,2495.5181,146.8832,2501.8595,143.45,2496.2514,138.9168,2489.91,142.35" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DeduplicationManager to chunks_global_metadata--><g id="link_DeduplicationManager_chunks_global_metadata"><path codeLine="236" d="M1645.2406,649.1512 C1650.9906,650.9712 1645.29,649.11 1651,650.8 C1746.47,679.06 2024.68,640.32 2095,710.8 C2183.29,799.31 2062.03,886.04 2132,989.64 C2197.43,1086.52 2321.97,1144.67 2410.64,1175.6 " fill="none" id="DeduplicationManager-backto-chunks_global_metadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1633.8,645.53,1638.3132,651.1541,1645.2406,649.1512,1640.7274,643.5271,1633.8,645.53" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DeduplicationManager to chunks_local_metadata--><g id="link_DeduplicationManager_chunks_local_metadata"><path codeLine="237" d="M1645.242,649.175 C1650.992,650.975 1645.28,649.13 1651,650.8 C1853.58,709.92 1920.65,647.63 2122,710.8 C2155.43,721.29 2189.65,735.87 2221.93,751.66 " fill="none" id="DeduplicationManager-backto-chunks_local_metadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1633.79,645.59,1638.321,651.1998,1645.242,649.175,1640.711,643.5652,1633.79,645.59" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link DeduplicationManager to RabinChunker--><g id="link_DeduplicationManager_RabinChunker"><path codeLine="238" d="M1503.1006,653.9858 C1531.5806,675.4658 1550.64,689.84 1578.05,710.51 " fill="none" id="DeduplicationManager-backto-RabinChunker" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1493.52,646.76,1495.9017,653.5664,1503.1006,653.9858,1500.7189,647.1794,1493.52,646.76" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link CacheManager to ChunkNode--><g id="link_CacheManager_ChunkNode"><path codeLine="239" d="M2727.4815,655.4728 C2781.6715,712.6928 2828.39,762.01 2865.5,801.19 " fill="none" id="CacheManager-backto-ChunkNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2719.23,646.76,2720.4515,653.8669,2727.4815,655.4728,2726.26,648.3659,2719.23,646.76" style="stroke:#181818;stroke-width:1.0;"/></g><!--reverse link ChunkNode to chunks_global_metadata--><g id="link_ChunkNode_chunks_global_metadata"><path codeLine="240" d="M2847.7861,907.1954 C2771.6161,974.6454 2642.71,1088.8 2566.43,1156.35 " fill="none" id="ChunkNode-backto-chunks_global_metadata" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2856.77,899.24,2849.6262,900.2231,2847.7861,907.1954,2854.9298,906.2124,2856.77,899.24" style="stroke:#181818;stroke-width:1.0;"/></g><!--SRC=[xHhRKkCuzfslKFK37T9XsDf7Xg6A9j2aXbkHC3ErlLqkOSk92bjoMN8Wqqj_-nx9bqYsV87kVjbQ7eAZSzNHkSfvZo8IIYGvIkbo9L50K-9BojdEJeBzHxmawDrfnBC0dTE8eFb6I1A_GrztaFhp8om4qd05pg4Nc0KHIT7H4NuGCiM-F3uk2U3l0rhJL6OuGj_SXACzz1iAI8YpI3gerfm6QEmhqb3C69KZ49Bv4eMP89xF6VCe2pcWmEEUWm5b4XNaDmbX8y0JiBB2AHedMAuco6GOWde5mv0gpVxHpVAEuC31Cdz-o4BWJlycdjJ_9eY78Jp3fo3o-mJ_cL99N9ADbPyf_uv410loWysvI3FcO-V6SjKPUL8x6S3gdaMKFJOO3Q3yH2IMCctVcW0u6gjFiF1UBxFd5cxc2iCnATrcZQECM0VN8sF-AXd6IbFIHFCD8xmKFKAl7XbtkNxC0yLC_Pj0NA_X6Jvxc9tuFX72mKtXn5Wyzj3VIneJ9beDK1oSmX89yP5SV_xdbnwUfwkuRuEz9eBy-bqSLCPoysYFilw4vUQOPrgTCqgkaGUeeAbw9EdmzD6ZGknIe8TendqPjJY87mUb-ZXTTYWsGHaJTCb8i7NpaZB04kSwlEpiRAlTb0HPqbBojbNkQqpaYWSlEQz2vIa1HVXcLETl4NnNUUfazxDAKwVGdroMUZRyXfBKoR6rXl0rILCQa4xguSMiwNRN_CSw7lg_v_rlUDuFzhWTLrylUGgJm3IbQylNFfHYFDNw4Dq64Sy02naS7cQCfm59IU35E3a2vIOLcJO0g8sLInwZ63f-ci2IWDeFCuWmM6dlZoXi1W1Nc84-wHWQ2LW5llghWJrdE14hBYj4KImuS4-nlo8Leg- -kR2SnXYPHUfR9uuLpNVuWRBJLSOUBOFkerG14XvjF3b6QVAh0JhxuzQxcdgdYx_6A0vy-Mm2y_FDKHJOX5KbJXz_77Ywo_kiaK_-KZpdit-TVN6Iw7Ohy2B2J73kErfNpy_Ib33fvI5ZOfLnHPOs_GTh- -NuPhdIEFSboxeMqLxTozOmjlBqo5TmuKNSnv7XMH06cdnEbj0Mof4kza5hIpsKuvF5L9btZ22b01aalFQ6NMNXb82rDFcDDjoeRjCzytHTEg0baPTOI6sIaOckrGUpKhPKZW4-A3zIXjFDWb-Gvo8NM5u1aGGSAutXk9Pb0zPiVcfHQFdlDi-CqQVBcuydbzxfnVtrxtFlV7PvvbsVN9sz-xKxGnZQJygTBoF-O9c_MD1WDVHBJ9aLhtsC-u_uk1JEGuz0Ll2qX-gSrPEN1hkqazZ4UE0yGWAloIUzNttKOWOLmurrgNPW89MpJhNlNQHJRhszrWmYZeD-CGhhhM9Kr87JQifRBgZQzInuxgHlL6HtJEL8TUOzd9K-S2Yfz6Zm_BhutwraYTTP6QgB_tZEqsbnyCH5li9YrSWOCAPfWNSa19Tc_d3AbCJGdxwHkAoSfckqfb-37OGFXo7Hbx-JZJc7Zr6Iaf0-DmG5q3D9KbRk6RiYiINJKDWXBTVUazmBY0yRXeJS8s4-dphucofkBmlU9DETkxJd68BR3wAPVcjjJMlcdL-VtCulRXOwwVRXpAvlxnVUT7RNXtXrjZYfSwogICIXsEZh58dZf5wC2kDPsCTRT2-YGWwZeQ0O1hyAl1RgHlDdzsXTm2gFLaZ5cRdJO2UMTZZAg2onBAXjDl0TlFNBeZbfHHyZjTyIMpZGrGhq5weDgJ6Tj1rOdRmmSqK-a2nZRoIqGtCebGzJ5flgLnOytTWHxAWzMH8OTXPsGZpb6PEjHrIfyEQSO0MoENEqHl7foUd5MKTWvd1NL1P5icpDyvb6BJfmDCp72VQftDHZK7dQaRRJDG_8COhIp0juzW3pYHf78GfTaTlNTjMu7Xx2e9vYi6GkGAjayDIXf2gOmbxmyvIhPhkPDH_9PgzEHjRKbzhQYdWMNXDrhmojSBE45GrpRjNp-yjBx_PaST6etueNVh1wGFCqHvLTSujEx5mwdsgkzjXeaZVhB-GZZT44gIJK0agoxQvRRDNMN2Cz7ZOusfRijJzOfJpWCSBwDlyrn5R7esZiE1tAmUXytiua0P0qxVoYF_M7gzCt0bfFt484kXVyhAPjTVhUvTdr5njdnOLKhsCqpiNDVA4c9HjFTwl0oefZdGMRuQsMvGfgm8f7WRMArqjFJUGDz1ZcJZS0Fxi1-QpwH5d0dsoetX9JAH3c6pFxrSnbtV_KpQQ1bKsAD7TsEMrQHMDQ2kXGfKAzhIYIMaq1j-T_jVT7GXWjpQfGnhQUEdi5Laxo7gsaJCJXmS7JqzClQoeo7EqdECK1NSQ_-3m-M6Oq80TP7Er31Gqf2VRLko18iSlz2BDb1gb1GtNrs0yeNgOutfSPv4oAeuEcFpel3BRRisu8z6vKrQh0-JIL0v9YbXfW1ATK8pVz-riVXXlkNDtTxI7RHJp9oyflR-HGDHGkujT8xsLZUsULhrfE399KNNZTayk72g_YwSnwsohb7bdKqrxJhOjcHXFPtSnxiqlBFQKSj5lWX0KDgEc7ASG1QONctFDBWbOa9SA1OkbVEEFxgZXt0FFwNDu3t2a5HqEk3ifrQ8Fs7CfAsAg0GWMDJgolb3zc8NnTy7nUB3jvzVyX2ptrt7D7OYaCsPhfpg6yhNRCls4MHPxrmg9yKpv64YOkkUvIN3C4TRUwVxVIMQ9LrfhUX9Ng5b_AT25GNrlsqcpTsuwek8VLqCaW2Yqx1phqBwvXbSx5EOfHw_uddNMo45L-TGY3UKX9oA_fUBBvUPAID6ET_kCo1GnjwH2Q5tDWSkIOxWpJbL-wiik0tDARMThpIaTMQSyfU-ZeYCTK7XytnFVa2YTbPnOO8CiHtkrosWAtdS8LAktO3LzlHpMTjKEyuPurhA9Aj_tUyJ_x-rs_3kcbxNp5hwcxVW8m1WwMMzNaMUzm0VaO3LApJkPyuT57KxjqwqCt1-8-N6lo6efifRMjPUiljZI9ioCQH6ENY6uIy-LclWlpXgWwMzN0xLZjN9UIBpl_1G00]--></g></svg>